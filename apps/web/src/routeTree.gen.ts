/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TodosRouteImport } from './routes/todos'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProfileIndexRouteImport } from './routes/profile.index'
import { Route as LoginIndexRouteImport } from './routes/login.index'
import { Route as ProfileEnableTwoFactorRouteImport } from './routes/profile.enable-two-factor'
import { Route as LoginTwoFactorRouteImport } from './routes/login.two-factor'
import { Route as ProfileConfirmTotpTotpURIBackupCodesRouteImport } from './routes/profile.confirm-totp.$totpURI.$backupCodes'

const TodosRoute = TodosRouteImport.update({
  id: '/todos',
  path: '/todos',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileIndexRoute = ProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileEnableTwoFactorRoute = ProfileEnableTwoFactorRouteImport.update({
  id: '/profile/enable-two-factor',
  path: '/profile/enable-two-factor',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginTwoFactorRoute = LoginTwoFactorRouteImport.update({
  id: '/login/two-factor',
  path: '/login/two-factor',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileConfirmTotpTotpURIBackupCodesRoute =
  ProfileConfirmTotpTotpURIBackupCodesRouteImport.update({
    id: '/profile/confirm-totp/$totpURI/$backupCodes',
    path: '/profile/confirm-totp/$totpURI/$backupCodes',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/todos': typeof TodosRoute
  '/login/two-factor': typeof LoginTwoFactorRoute
  '/profile/enable-two-factor': typeof ProfileEnableTwoFactorRoute
  '/login': typeof LoginIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/profile/confirm-totp/$totpURI/$backupCodes': typeof ProfileConfirmTotpTotpURIBackupCodesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/todos': typeof TodosRoute
  '/login/two-factor': typeof LoginTwoFactorRoute
  '/profile/enable-two-factor': typeof ProfileEnableTwoFactorRoute
  '/login': typeof LoginIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/profile/confirm-totp/$totpURI/$backupCodes': typeof ProfileConfirmTotpTotpURIBackupCodesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/todos': typeof TodosRoute
  '/login/two-factor': typeof LoginTwoFactorRoute
  '/profile/enable-two-factor': typeof ProfileEnableTwoFactorRoute
  '/login/': typeof LoginIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/profile/confirm-totp/$totpURI/$backupCodes': typeof ProfileConfirmTotpTotpURIBackupCodesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/todos'
    | '/login/two-factor'
    | '/profile/enable-two-factor'
    | '/login'
    | '/profile'
    | '/profile/confirm-totp/$totpURI/$backupCodes'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/todos'
    | '/login/two-factor'
    | '/profile/enable-two-factor'
    | '/login'
    | '/profile'
    | '/profile/confirm-totp/$totpURI/$backupCodes'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/todos'
    | '/login/two-factor'
    | '/profile/enable-two-factor'
    | '/login/'
    | '/profile/'
    | '/profile/confirm-totp/$totpURI/$backupCodes'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  TodosRoute: typeof TodosRoute
  LoginTwoFactorRoute: typeof LoginTwoFactorRoute
  ProfileEnableTwoFactorRoute: typeof ProfileEnableTwoFactorRoute
  LoginIndexRoute: typeof LoginIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  ProfileConfirmTotpTotpURIBackupCodesRoute: typeof ProfileConfirmTotpTotpURIBackupCodesRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/todos': {
      id: '/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/enable-two-factor': {
      id: '/profile/enable-two-factor'
      path: '/profile/enable-two-factor'
      fullPath: '/profile/enable-two-factor'
      preLoaderRoute: typeof ProfileEnableTwoFactorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/two-factor': {
      id: '/login/two-factor'
      path: '/login/two-factor'
      fullPath: '/login/two-factor'
      preLoaderRoute: typeof LoginTwoFactorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/confirm-totp/$totpURI/$backupCodes': {
      id: '/profile/confirm-totp/$totpURI/$backupCodes'
      path: '/profile/confirm-totp/$totpURI/$backupCodes'
      fullPath: '/profile/confirm-totp/$totpURI/$backupCodes'
      preLoaderRoute: typeof ProfileConfirmTotpTotpURIBackupCodesRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  TodosRoute: TodosRoute,
  LoginTwoFactorRoute: LoginTwoFactorRoute,
  ProfileEnableTwoFactorRoute: ProfileEnableTwoFactorRoute,
  LoginIndexRoute: LoginIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  ProfileConfirmTotpTotpURIBackupCodesRoute:
    ProfileConfirmTotpTotpURIBackupCodesRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
